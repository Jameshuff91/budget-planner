name: Visual Regression Tests

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  workflow_dispatch:

jobs:
  visual-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        project: [chromium-desktop, firefox-desktop, webkit-desktop, chromium-mobile, chromium-tablet]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.project }}
      
      - name: Build application
        run: npm run build
      
      - name: Run visual tests for ${{ matrix.project }}
        run: npm run test:visual -- --project=${{ matrix.project }}
        env:
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-results-${{ matrix.project }}
          path: |
            playwright-report/visual/
            test-results/visual/
            e2e/visual-regression/__screenshots__/
          retention-days: 30
      
      - name: Upload diff images on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-diff-${{ matrix.project }}
          path: |
            test-results/**/*diff.png
            test-results/**/*actual.png
          retention-days: 30

  update-baselines:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Build application
        run: npm run build
      
      - name: Update visual baselines
        run: npm run test:visual:update
        env:
          CI: true
      
      - name: Commit updated baselines
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add e2e/visual-regression/__screenshots__/
          git diff --staged --quiet || git commit -m "chore: update visual regression baselines"
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  visual-report:
    runs-on: ubuntu-latest
    needs: visual-tests
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Generate combined report
        run: |
          mkdir -p visual-report
          cp -r artifacts/visual-test-results-*/* visual-report/ || true
          echo "# Visual Test Results" > visual-report/summary.md
          echo "## Test Run: $(date)" >> visual-report/summary.md
          find visual-report -name "*.png" -type f | wc -l | xargs -I {} echo "Total screenshots: {}" >> visual-report/summary.md
      
      - name: Upload combined report
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-report-combined
          path: visual-report/
          retention-days: 30
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('visual-report/summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });